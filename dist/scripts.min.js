let pokemonRepository = (function() {
  let t = [],
    e = 'https://pokeapi.co/api/v2/pokemon/?limit=150';
  function n(e) {
    'object' == typeof e && 'name' in e && 'height' in e && 'types' in e
      ? t.push(e)
      : console.log('pokemon is not correct');
  }
  function o(t) {
    let e = t.detailsUrl;
    return fetch(e)
      .then(function(t) {
        return t.json();
      })
      .then(function(e) {
        (t.imageUrl = e.sprites.other.dream_world.front_default),
          (t.height = e.height),
          (t.types = e.types),
          (t.weight = e.weight);
      })
      .catch(function(t) {
        console.error(t);
      });
  }
  function i(t) {
    o(t).then(function() {
      l(t);
    });
  }
  function l(t) {
    let e = $('.modal-title'),
      n = $('.modal-body');
    e.empty(), n.empty();
    let o = $('<h1>' + t.name + '</h1>'),
      i = $('<p>Height: ' + t.height + ' \'</p>'),
      l = $('<p>Weight: ' + t.weight + ' lbs.</p>'),
      a = document.createElement('img');
    a.classList.add('pokemon-img'),
      (a.src = t.imageUrl),
      e.append(o),
      n.append(i),
      n.append(a),
      n.append(l);
  }
  return {
    add: n,
    getAll: function() {
      return t;
    },
    addListItem: function(t) {
      let e = document.querySelector('.pokemon-list'),
        n = document.createElement('li');
      n.classList.add('group-list-item', 'col-lg-4', 'col-md-6');
      let o = document.createElement('button');
      (o.innerText = t.name),
        o.classList.add('btn', 'btn-warning', 'btn-block'),
        o.setAttribute('data-target', '#modal-container'),
        o.setAttribute('data-toggle', 'modal'),
        n.appendChild(o),
        e.appendChild(n),
        o.addEventListener('click', function() {
          i(t);
        });
    },
    loadList: function() {
      return fetch(e)
        .then(function(t) {
          return t.json();
        })
        .then(function(t) {
          t.results.forEach(function(t) {
            n({
              name: t.name,
              detailsUrl: t.url,
              height: t.height,
              types: t.types,
              weight: t.weight
            });
          });
        })
        .catch(function(t) {
          console.error(t);
        });
    },
    loadDetails: o,
    showDetails: i,
    showModal: l,
    find: function(e) {
      let n = t.filter(t => t.name === e);
      console.log(n[0]);
    }
  };
})();
pokemonRepository.loadList().then(function() {
  pokemonRepository.getAll().forEach(function(t) {
    pokemonRepository.addListItem(t);
  });
});
